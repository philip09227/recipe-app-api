version: "3.9"

# specify services 
#
services:
  #name of the services , services goona run our docker file 
  app:
    # build the services at current directory 
    build:
      context: .
      args:
        - DEV=true 
    # mapping the port in our local machine to the port in docker container 
    # how we want to access network connect to the network 
    ports:
      - "8000:8000"
    # mappinf the direction we created in the porject to the app inside our container 
    # when we update code in our local project will reflect in the running continaer in real time 
    # no need to rebuild the container 
    volumes:
      - ./app:/app
    # commmand use to the start service 
    # first check the whether the db has beem up 
    # second migrate db the the newest 
    # run the service 
    command: >
      sh -c "python manage.py wait_for_db && 
       python manage.py migrate &&
       python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # three environement varibles 
    # set the inital database configuration for new db service 
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
# store it in the default location on the file system it does for the name volume
volumes:
  dev-db-data:


